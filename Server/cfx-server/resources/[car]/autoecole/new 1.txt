AddEventHandler("ply_autoecole:StartPermisMotoTrue", function()
	local permis_id = 2
	--local permis_name = name
	local permis_vehicle = 1672195559
	local permis_end_x = 646.875
	local permis_end_y = 584.900
	local permis_end_z = 128.911
	local permis_plate ="AUTOTEST"
	
	Citizen.CreateThread(function()
	 	Citizen.Wait(0)
 		local pos = autoecole_location
 		local caisseo = GetClosestVehicle(autoecole_location[1], autoecole_location[2], autoecole_location[3], 3.000, 0, 70)
		if DoesEntityExist(caisseo) then
			drawNotification("La zone est encombrée") 
		else
		   --TriggerServerEvent("mine:getCash_s")
           --Wait(100)
            --if ArgentJoueur >= 5000 then
			   RequestModel(permis_vehicle)
			   while not HasModelLoaded(permis_vehicle) do
			   Citizen.Wait(0)
			   end
			   veh = CreateVehicle(permis_vehicle, autoecole_location[1], autoecole_location[2], autoecole_location[3], 215.0, true, false)
			   SetVehicleNumberPlateText(veh, permis_plate)
			   SetVehicleOnGroundProperly(veh)
		   	   SetVehicleHasBeenOwnedByPlayer(veh,true)
			   local id = NetworkGetNetworkIdFromEntity(veh)
			   SetNetworkIdCanMigrate(id, true)
		  	   SetVehicleColours(veh, primarycolor, secondarycolor)
			   SetVehicleExtraColours(veh, pearlescentcolor, wheelcolor)
			   TaskWarpPedIntoVehicle(GetPlayerPed(-1),veh,-1)
			   SetEntityInvincible(veh, false) 
			   drawNotification("Début de l'épreuve, rendez-vous à destination en respectant le code de la route")
               --TriggerServerEvent("mine:addmoney",(-5000))
            --else
              -- drawNotification("Vous devez fournir ~g~5000$~s~ pour passer l'épreuve")
            end				   
		end		
	end)

	local epreuve = true

	blipermis = AddBlipForCoord(permis_end_x,permis_end_y,permis_end_z)
	Citizen.CreateThread(function()		
		Wait(0)
        SetBlipSprite(blipermis, 1)
        SetBlipColour(blipermis, 2)
        SetBlipAsMissionCreatorBlip(blipermis,true)
        SetBlipRoute(blipermis, true)
	end)

	Citizen.CreateThread(function()
		while true do
			Wait(0)
			if GetDistanceBetweenCoords(permis_end_x,permis_end_y,permis_end_z,GetEntityCoords(LocalPed())) < 3 and epreuve then
				drawTxt("Appuyer sur ~g~E~s~ pour terminer l'épreuve",0,1,0.5,0.8,0.6,255,255,255,255)
				if IsControlJustPressed(1, 86) then
					local ped = GetPlayerPed(-1)
					local vehicle = GetVehiclePedIsUsing(ped)
					SetEntityAsMissionEntity(vehicle, true, true)
					local vehplate = GetVehicleNumberPlateText(vehicle)					
					if vehplate == permis_plate then
						local vehiclehealth = GetEntityHealth(vehicle) - 100
						local maxhealth = GetEntityMaxHealth(vehicle) - 100
						local damage = (vehiclehealth / maxhealth) * 100
						if damage <= 95 then							
							drawNotification("Epreuve ratée, le véhicule est trop endommagé")							
							Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle))
							epreuve = false
							SetEntityAsNoLongerNeeded(blipermis)
							SetBlipAsMissionCreatorBlip(blipermis,false)
							Citizen.InvokeNative(0x86A652570E5F25DD, Citizen.PointerValueIntInitialized(blipermis))
						else							
							drawNotification("Epreuve réussie")
							Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle))
    						TriggerServerEvent("ply_autoecole:SetLicence", permis_id)
							epreuve = false
							SetEntityAsNoLongerNeeded(blipermis)
							SetBlipAsMissionCreatorBlip(blipermis,false)
							Citizen.InvokeNative(0x86A652570E5F25DD, Citizen.PointerValueIntInitialized(blipermis))
							--TriggerServerEvent("mine:addmoney",(2500))
                            --drawNotification("L'État vous rembouse la moitié de la somme engagée: ~g~2500$")
						end
					else
						drawNotification("Ce n'est pas le bon vehicule")
					end
				end
			end
		end
	end)
end)

AddEventHandler("ply_autoecole:StartPermisVeloTrue", function()
	local permis_id = 3
	--local permis_name = name
	local permis_vehicle = -836512833
	local permis_end_x = -2316.720
	local permis_end_y = 428.935
	local permis_end_z = 174.467
	local permis_plate ="AUTOTEST"
	
	Citizen.CreateThread(function()
	 	Citizen.Wait(0)
 		local pos = autoecole_location
 		local caisseo = GetClosestVehicle(autoecole_location[1], autoecole_location[2], autoecole_location[3], 3.000, 0, 70)
		if DoesEntityExist(caisseo) then
			drawNotification("La zone est encombrée") 
		else
			RequestModel(permis_vehicle)
			while not HasModelLoaded(permis_vehicle) do
			Citizen.Wait(0)
			end
			veh = CreateVehicle(permis_vehicle, autoecole_location[1], autoecole_location[2], autoecole_location[3], 215.0, true, false)
			SetVehicleNumberPlateText(veh, permis_plate)
			SetVehicleOnGroundProperly(veh)
			SetVehicleHasBeenOwnedByPlayer(veh,true)
			local id = NetworkGetNetworkIdFromEntity(veh)
			SetNetworkIdCanMigrate(id, true)
			SetVehicleColours(veh, primarycolor, secondarycolor)
			SetVehicleExtraColours(veh, pearlescentcolor, wheelcolor)
			TaskWarpPedIntoVehicle(GetPlayerPed(-1),veh,-1)
			SetEntityInvincible(veh, false) 
			drawNotification("Début de l'épreuve, rendez-vous à destination en respectant le code de la route")		
		end		
	end)

	local epreuve = true

	blipermis = AddBlipForCoord(permis_end_x,permis_end_y,permis_end_z)
	Citizen.CreateThread(function()		
		Wait(0)
        SetBlipSprite(blipermis, 1)
        SetBlipColour(blipermis, 2)
        SetBlipAsMissionCreatorBlip(blipermis,true)
        SetBlipRoute(blipermis, true)
	end)

	Citizen.CreateThread(function()
		while true do
			Wait(0)
			if GetDistanceBetweenCoords(permis_end_x,permis_end_y,permis_end_z,GetEntityCoords(LocalPed())) < 3 and epreuve then
				drawTxt("Appuyer sur ~g~E~s~ pour terminer l'épreuve",0,1,0.5,0.8,0.6,255,255,255,255)
				if IsControlJustPressed(1, 86) then
					local ped = GetPlayerPed(-1)
					local vehicle = GetVehiclePedIsUsing(ped)
					SetEntityAsMissionEntity(vehicle, true, true)
					local vehplate = GetVehicleNumberPlateText(vehicle)					
					if vehplate == permis_plate then
						local vehiclehealth = GetEntityHealth(vehicle) - 100
						local maxhealth = GetEntityMaxHealth(vehicle) - 100
						local damage = (vehiclehealth / maxhealth) * 100
						if damage <= 95 then							
							drawNotification("Epreuve ratée, le véhicule est trop endommagé")							
							Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle))
							epreuve = false
							SetEntityAsNoLongerNeeded(blipermis)
							SetBlipAsMissionCreatorBlip(blipermis,false)
							Citizen.InvokeNative(0x86A652570E5F25DD, Citizen.PointerValueIntInitialized(blipermis))
						else							
							drawNotification("Epreuve réussie")
							Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle))
    						TriggerServerEvent("ply_autoecole:SetLicence", permis_id)
							epreuve = false
							SetEntityAsNoLongerNeeded(blipermis)
							SetBlipAsMissionCreatorBlip(blipermis,false)
							Citizen.InvokeNative(0x86A652570E5F25DD, Citizen.PointerValueIntInitialized(blipermis))
						end
					else
						drawNotification("Ce n'est pas le bon vehicule")
					end
				end
			end
		end
	end)
end)

AddEventHandler("ply_autoecole:StartPermisPoidslourdTrue", function()
	local permis_id = 4
	--local permis_name = name
	local permis_vehicle = 2112052861
	local permis_end_x = 1268.240
	local permis_end_y = -3186.820
	local permis_end_z = 5.903
	local permis_plate ="AUTOTEST"
	
	Citizen.CreateThread(function()
	 	Citizen.Wait(0)
 		local pos = autoecole_location
 		local caisseo = GetClosestVehicle(autoecole_location[1], autoecole_location[2], autoecole_location[3], 3.000, 0, 70)
		if DoesEntityExist(caisseo) then
			drawNotification("La zone est encombrée") 
		else
	      --TriggerServerEvent("mine:getCash_s")
          --Wait(100)
            --if ArgentJoueur >= 10000 then
		    RequestModel(permis_vehicle)
		    while not HasModelLoaded(permis_vehicle) do
		    Citizen.Wait(0)
		    end
		    veh = CreateVehicle(permis_vehicle, autoecole_location[1], autoecole_location[2], autoecole_location[3], 215.0, true, false)
		    SetVehicleNumberPlateText(veh, permis_plate)
		    SetVehicleOnGroundProperly(veh)
		    SetVehicleHasBeenOwnedByPlayer(veh,true)
		    local id = NetworkGetNetworkIdFromEntity(veh)
		    SetNetworkIdCanMigrate(id, true)
		    SetVehicleColours(veh, primarycolor, secondarycolor)
		    SetVehicleExtraColours(veh, pearlescentcolor, wheelcolor)
		    TaskWarpPedIntoVehicle(GetPlayerPed(-1),veh,-1)
		    SetEntityInvincible(veh, false) 
		    drawNotification("Début de l'épreuve, rendez-vous à destination en respectant le code de la route")
                ---TriggerServerEvent("mine:addmoney",(-10000))
            --else
               --drawNotification("Vous devez fournir ~g~10000$~s~ pour passer l'épreuve")	
            end			   
		end		
	end)

	local epreuve = true

	blipermis = AddBlipForCoord(permis_end_x,permis_end_y,permis_end_z)
	Citizen.CreateThread(function()		
		Wait(0)
        SetBlipSprite(blipermis, 1)
        SetBlipColour(blipermis, 2)
        SetBlipAsMissionCreatorBlip(blipermis,true)
        SetBlipRoute(blipermis, true)
	end)

	Citizen.CreateThread(function()
		while true do
			Wait(0)
			if GetDistanceBetweenCoords(permis_end_x,permis_end_y,permis_end_z,GetEntityCoords(LocalPed())) < 3 and epreuve then
				drawTxt("Appuyer sur ~g~E~s~ pour terminer l'épreuve",0,1,0.5,0.8,0.6,255,255,255,255)
				if IsControlJustPressed(1, 86) then
					local ped = GetPlayerPed(-1)
					local vehicle = GetVehiclePedIsUsing(ped)
					SetEntityAsMissionEntity(vehicle, true, true)
					local vehplate = GetVehicleNumberPlateText(vehicle)					
					if vehplate == permis_plate then
						local vehiclehealth = GetEntityHealth(vehicle) - 100
						local maxhealth = GetEntityMaxHealth(vehicle) - 100
						local damage = (vehiclehealth / maxhealth) * 100
						if damage <= 95 then							
							drawNotification("Epreuve ratée, le véhicule est trop endommagé")							
							Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle))
							epreuve = false
							SetEntityAsNoLongerNeeded(blipermis)
							SetBlipAsMissionCreatorBlip(blipermis,false)
							Citizen.InvokeNative(0x86A652570E5F25DD, Citizen.PointerValueIntInitialized(blipermis))
						else							
							drawNotification("Epreuve réussie")
							Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle))
    						TriggerServerEvent("ply_autoecole:SetLicence", permis_id)
							epreuve = false
							SetEntityAsNoLongerNeeded(blipermis)
							SetBlipAsMissionCreatorBlip(blipermis,false)
							Citizen.InvokeNative(0x86A652570E5F25DD, Citizen.PointerValueIntInitialized(blipermis))
							--TriggerServerEvent("mine:addmoney",(5000))
                            --drawNotification("L'État vous rembouse la moitié de la somme engagée: ~g~5000$")
						end
					else
						drawNotification("Ce n'est pas le bon vehicule")
					end
				end
			end
		end
	end)
end)

AddEventHandler("ply_autoecole:StartPermisHeliTrue", function()
	local permis_id = 5
	--local permis_name = name
	local permis_vehicle = -1660661558
	local permis_end_x = 1770.72
	local permis_end_y = 3239.85
	local permis_end_z = 42.1344
	local permis_plate ="AUTOTEST"
	
	Citizen.CreateThread(function()
	 	Citizen.Wait(0)
 		local pos = autoecole_location
 		local caisseo = GetClosestVehicle(-725.271, -1444.27, 5.00052, 3.000, 0, 70)
		if DoesEntityExist(caisseo) then
			drawNotification("La zone est encombrée") 
		else
		  --TriggerServerEvent("mine:getCash_s")
          --Wait(100)
            --if ArgentJoueur >= 50000 then
		    RequestModel(permis_vehicle)
		    while not HasModelLoaded(permis_vehicle) do
		    Citizen.Wait(0)
		    end
		    veh = CreateVehicle(permis_vehicle, -725.271, -1444.27, 5.00052, 215.0, true, false)
		    SetVehicleNumberPlateText(veh, permis_plate)
		    SetVehicleOnGroundProperly(veh)
		    SetVehicleHasBeenOwnedByPlayer(veh,true)
		    local id = NetworkGetNetworkIdFromEntity(veh)
		    SetNetworkIdCanMigrate(id, true)
		    SetVehicleColours(veh, primarycolor, secondarycolor)
		    SetVehicleExtraColours(veh, pearlescentcolor, wheelcolor)
			TaskWarpPedIntoVehicle(GetPlayerPed(-1),veh,-1)
			SetEntityInvincible(veh, false) 
			    --drawNotification("Début de l'épreuve, rendez-vous à destination")
                --TriggerServerEvent("mine:addmoney",(-50000))
            --else
               --drawNotification("Vous devez fournir ~g~50000$~s~ pour passer l'épreuve")
            end			   
		end		
	end)

	local epreuve = true

	blipermis = AddBlipForCoord(permis_end_x,permis_end_y,permis_end_z)
	Citizen.CreateThread(function()		
		Wait(0)
        SetBlipSprite(blipermis, 1)
        SetBlipColour(blipermis, 2)
        SetBlipAsMissionCreatorBlip(blipermis,true)
        SetBlipRoute(blipermis, true)
	end)

	Citizen.CreateThread(function()
		while true do
			Wait(0)
			if GetDistanceBetweenCoords(permis_end_x,permis_end_y,permis_end_z,GetEntityCoords(LocalPed())) < 3 and epreuve then
				drawTxt("Appuyer sur ~g~E~s~ pour terminer l'épreuve",0,1,0.5,0.8,0.6,255,255,255,255)
				if IsControlJustPressed(1, 86) then
					local ped = GetPlayerPed(-1)
					local vehicle = GetVehiclePedIsUsing(ped)
					SetEntityAsMissionEntity(vehicle, true, true)
					local vehplate = GetVehicleNumberPlateText(vehicle)					
					if vehplate == permis_plate then
						local vehiclehealth = GetEntityHealth(vehicle) - 100
						local maxhealth = GetEntityMaxHealth(vehicle) - 100
						local damage = (vehiclehealth / maxhealth) * 100
						if damage <= 95 then							
							drawNotification("Epreuve ratée, le véhicule est trop endommagé")							
							Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle))
							epreuve = false
							SetEntityAsNoLongerNeeded(blipermis)
							SetBlipAsMissionCreatorBlip(blipermis,false)
							Citizen.InvokeNative(0x86A652570E5F25DD, Citizen.PointerValueIntInitialized(blipermis))
						else							
							drawNotification("Epreuve réussie")
							Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle))
    						TriggerServerEvent("ply_autoecole:SetLicence", permis_id)
							epreuve = false
							SetEntityAsNoLongerNeeded(blipermis)
							SetBlipAsMissionCreatorBlip(blipermis,false)
							Citizen.InvokeNative(0x86A652570E5F25DD, Citizen.PointerValueIntInitialized(blipermis))
							--TriggerServerEvent("mine:addmoney",(25000))
                            --drawNotification("L'État vous rembouse la moitié de la somme engagée: ~g~25000$")
						end
					else
						drawNotification("Ce n'est pas le bon vehicule")
					end
				end
			end
		end
	end)
end)

AddEventHandler("ply_autoecole:StartPermisBoatTrue", function()
	local permis_id = 6
	--local permis_name = name
	local permis_vehicle = 861409633
	local permis_end_x = -3425.93
	local permis_end_y = 947.454
	local permis_end_z = -0.167121
	local permis_plate ="AUTOTEST"
	
	Citizen.CreateThread(function()
	 	Citizen.Wait(0)
 		local pos = autoecole_location
 		local caisseo = GetClosestVehicle(-936.327, -1466.56, -0.472946, 3.000, 0, 70)
		if DoesEntityExist(caisseo) then
			drawNotification("La zone est encombrée") 
		else
		  --TriggerServerEvent("mine:getCash_s")
          --Wait(100)
            --if ArgentJoueur >= 50000 then
			RequestModel(permis_vehicle)
		    while not HasModelLoaded(permis_vehicle) do
		    Citizen.Wait(0)
			end
			veh = CreateVehicle(permis_vehicle, -936.327, -1466.56, -0.472946, 215.0, true, false)
			SetVehicleNumberPlateText(veh, permis_plate)
			SetVehicleOnGroundProperly(veh)
			SetVehicleHasBeenOwnedByPlayer(veh,true)
			local id = NetworkGetNetworkIdFromEntity(veh)
			SetNetworkIdCanMigrate(id, true)
			SetVehicleColours(veh, primarycolor, secondarycolor)
			SetVehicleExtraColours(veh, pearlescentcolor, wheelcolor)
			TaskWarpPedIntoVehicle(GetPlayerPed(-1),veh,-1)
			SetEntityInvincible(veh, false) 
			    --drawNotification("Début de l'épreuve, rendez-vous à destination")	
                --TriggerServerEvent("mine:addmoney",(-50000))
            --else
                --drawNotification("Vous devez fournir ~g~50000$~s~ pour passer l'épreuve")
            end			   
		end		
	end)

	local epreuve = true

	blipermis = AddBlipForCoord(permis_end_x,permis_end_y,permis_end_z)
	Citizen.CreateThread(function()		
		Wait(0)
        SetBlipSprite(blipermis, 1)
        SetBlipColour(blipermis, 2)
        SetBlipAsMissionCreatorBlip(blipermis,true)
        SetBlipRoute(blipermis, true)
	end)

	Citizen.CreateThread(function()
		while true do
			Wait(0)
			if GetDistanceBetweenCoords(permis_end_x,permis_end_y,permis_end_z,GetEntityCoords(LocalPed())) < 3 and epreuve then
				drawTxt("Appuyer sur ~g~E~s~ pour terminer l'épreuve",0,1,0.5,0.8,0.6,255,255,255,255)
				if IsControlJustPressed(1, 86) then
					local ped = GetPlayerPed(-1)
					local vehicle = GetVehiclePedIsUsing(ped)
					SetEntityAsMissionEntity(vehicle, true, true)
					local vehplate = GetVehicleNumberPlateText(vehicle)					
					if vehplate == permis_plate then
						local vehiclehealth = GetEntityHealth(vehicle) - 100
						local maxhealth = GetEntityMaxHealth(vehicle) - 100
						local damage = (vehiclehealth / maxhealth) * 100
						if damage <= 95 then							
							drawNotification("Epreuve ratée, le véhicule est trop endommagé")							
							Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle))
							epreuve = false
							SetEntityAsNoLongerNeeded(blipermis)
							SetBlipAsMissionCreatorBlip(blipermis,false)
							Citizen.InvokeNative(0x86A652570E5F25DD, Citizen.PointerValueIntInitialized(blipermis))
						else							
							drawNotification("Epreuve réussie")
							Citizen.InvokeNative(0xEA386986E786A54F, Citizen.PointerValueIntInitialized(vehicle))
    						TriggerServerEvent("ply_autoecole:SetLicence", permis_id)
							epreuve = false
							SetEntityAsNoLongerNeeded(blipermis)
							SetBlipAsMissionCreatorBlip(blipermis,false)
							Citizen.InvokeNative(0x86A652570E5F25DD, Citizen.PointerValueIntInitialized(blipermis))
							--TriggerServerEvent("mine:addmoney",(25000))
                            --drawNotification("L'État vous rembouse la moitié de la somme engagée: ~g~25000$")
						end
					else
						drawNotification("Ce n'est pas le bon vehicule")
					end
				end
			end
		end
	end)
end)